[
  {
    "objectID": "MOM_manuscript.html",
    "href": "MOM_manuscript.html",
    "title": "Mom Manuscript",
    "section": "",
    "text": "Show the code\n# Load dataset\norg_data &lt;- read_sav(\"Mixed Orientation Marriages 2018.sav\")\ndata &lt;- org_data\n\n# Remove the 16th and 28th observation from the data frame because it's flawwed.\ndata &lt;- org_data[-16, ]\ndata &lt;- data[-28, ]\n\n# Obv. 4 had two years, the most recent one was selected. \ndata$q0006[8] &lt;- 2018\ndata$q0006[12] &lt;- 2016\n# Made the years numeric, and not characters. \ndata$q0006 &lt;- as.numeric(data$q0006)\ndata &lt;- subset(data, !is.na(q0004))\n\n# Convert the character strings to POSIXct (datetime) objects\ndata$Start_Time &lt;- as.POSIXct(data$StartDate, format = \"%m/%d/%Y %I:%M:%S %p\")\ndata$End_Time &lt;- as.POSIXct(data$EndDate, format = \"%m/%d/%Y %I:%M:%S %p\")\n\n# Now you can perform operations on these datetime variables or create a new one based on them\ndata$Duration &lt;- data$End_Time - data$Start_Time\n\ndata &lt;- data[data$Duration &gt;= 10, ]\ndata &lt;- data[data$q0004 != 5, ]\ndata &lt;- data[data$q0002 != 3, ]"
  },
  {
    "objectID": "MOM_manuscript.html#data-cleaning",
    "href": "MOM_manuscript.html#data-cleaning",
    "title": "Mom Manuscript",
    "section": "Data Cleaning",
    "text": "Data Cleaning\n\n\nShow the code\n# Renaming Variables\ndata &lt;- rename(data, \n               # Gyno\n               eros_g1 = q0026_0001, eros_g2 = q0027_0001, eros_g3 = q0028_0001, eros_g4 = q0029_0001, eros_g5 = q0030_0001, eros_g6 = q0031_0001, eros_g7 = q0032_0001, eros_g8 = q0033_0001, \n               # Andro\n               eros_a1 = q0034_0001, eros_a2 = q0035_0001, eros_a3 = q0036_0001, eros_a4 = q0037_0001, eros_a5 = q0038_0001, eros_a6 = q0039_0001, eros_a7 = q0040_0001, eros_a8 = q0041_0001,\n               # Depression\n               dass_d1 = q0122_0001, dass_d2 = q0124_0001, dass_d3 = q0129_0001, dass_d4 = q0132_0001, dass_d5 = q0135_0001, dass_d6 = q0136_0001, dass_d7 = q0140_0001,\n               # Anxiety\n               dass_a1 = q0121_0001, dass_a2 = q0123_0001, dass_a3 = q0126_0001, dass_a4 = q0128_0001, dass_a5 = q0134_0001, dass_a6 = q0138_0001, dass_a7 = q0139_0001, \n               # Stress\n               dass_s1 = q0120_0001, dass_s2 = q0125_0001, dass_s3 = q0127_0001, dass_s4 = q0130_0001, dass_s5 = q0131_0001, dass_s6 = q0133_0001, dass_s7 = q0137_0001,\n               # Growth\n               pwb_g1 = q0084_0001, pwb_g2 = q0085_0001, pwb_g3 = q0086_0001, pwb_g4 = q0087_0001, pwb_g5 = q0088_0001, pwb_g6 = q0089_0001, pwb_g7 = q0090_0001, pwb_g8 = q0091_0001, pwb_g9 = q0092_0001,\n               # Purpose in Life\n               pwb_p1 = q0093_0001, pwb_p2 = q0094_0001, pwb_p3 = q0095_0001, pwb_p4 = q0096_0001, pwb_p5 = q0097_0001, pwb_p6 = q0098_0001, pwb_p7 = q0099_0001, pwb_p8 = q0100_0001, pwb_p9 = q0101_0001, \n               # Self Acceptance\n               pwb_a1 = q0102_0001, pwb_a2 = q0103_0001, pwb_a3 = q0104_0001, pwb_a4 = q0105_0001, pwb_a5 = q0106_0001, pwb_a6 = q0107_0001, pwb_a7 = q0108_0001, pwb_a8 = q0109_0001, pwb_a9 = q0110_0001,\n               # DUREL\n               durel_1 = q0141_0001, durel_2 = q0142_0001, durel_3 = q0143_0001, durel_4 = q0144_0001, durel_5 = q0145_0001, durel_6 = q0146_0001, durel_7 = q0147_0001, durel_8 = q0148_0001, durel_9 = q0149_0001, durel_10 = q0150_0001,\n               # Relational Closeness\n               rel_1 = q0151_0001, rel_2 = q0152_0001, rel_3 = q0153_0001, rel_4 = q0154_0001, rel_5 = q0155_0001, rel_6 = q0156_0001, rel_7 = q0157_0001, rel_8 = q0158_0001, rel_9 = q0159_0001,\n               # Extra Demographic Variables\n               age = q0001,\n               sex_att = q0011, \n               gender = q0002,\n               race = q0003,\n               race_other = q0003_other,\n               marriage_status = q0004,\n               marriage_rate = q0005,\n               marriage_year = q0006,\n               education = q0007,\n               employment = q0008,\n               income = q0009,\n               religion = q0010,\n               rel_other = q0010_other,\n               spouse_sex_att = q0012,\n               sexbeh_1 = q0013_0001,\n               sexbeh_2 = q0013_0002,\n               sexbeh_3 = q0013_0003,\n               sexbeh_4 = q0013_0004,\n               sexbeh_5 = q0013_0005,\n               sexbeh_6 = q0013_0006,\n               sexbeh_7 = q0013_0007,\n               sexbeh_8 = q0013_0008,\n               sexbeh_9 = q0013_0009,\n               sexbeh_10 = q0013_0010,\n               sexbeh_11 = q0013_0011,\n               sexbeh_12 = q0013_0012,\n               add_note = q0014)\n\ndata &lt;- subset(data, gender != 3)\n\n\nCreate demographic table\n\n\nShow the code\nlibrary(gtsummary)\n\n# summarize the data with our package\n# table1 &lt;- \n  # data %&gt;%\n  # tbl_summary(include = c(age, sexori, gender, race, education, employment, income, rel_affiliation, spouse_so))"
  },
  {
    "objectID": "MOM_manuscript.html#reverse-score-variables",
    "href": "MOM_manuscript.html#reverse-score-variables",
    "title": "Mom Manuscript",
    "section": "Reverse Score Variables",
    "text": "Reverse Score Variables\n\n\nShow the code\n# PWB - Growth\nvars_to_reverse &lt;- c(\"pwb_g1\", \"pwb_g2\", \"pwb_g4\", \"pwb_g6\", \"pwb_g8\", \"pwb_g9\") # Add the names of variables to reverse\ndata &lt;- data %&gt;%\n  mutate(across(all_of(vars_to_reverse), ~ 7 - .))\n# Purpose\nvars_to_reverse &lt;- c(\"pwb_p1\", \"pwb_p2\", \"pwb_p3\", \"pwb_p4\", \"pwb_p5\", \"pwb_p9\") # Add the names of variables to reverse\ndata &lt;- data %&gt;%\n  mutate(across(all_of(vars_to_reverse), ~ 7 - .))\n# Acceptance\nvars_to_reverse &lt;- c(\"pwb_a3\", \"pwb_a6\", \"pwb_a7\") # Add the names of variables to reverse\ndata &lt;- data %&gt;%\n  mutate(across(all_of(vars_to_reverse), ~ 7 - .))"
  },
  {
    "objectID": "MOM_manuscript.html#score-variables",
    "href": "MOM_manuscript.html#score-variables",
    "title": "Mom Manuscript",
    "section": "Score Variables",
    "text": "Score Variables\n\n\nShow the code\n# eros-Gyno Subscale\ndata$eros_gyno &lt;- rowSums(data[, 48:55])\n# eros-Andro Subscale\ndata$eros_andro &lt;- rowSums(data[, 56:63])\n# DASS\n## Depression\ndata$dass_dep &lt;- rowSums(data[, c(\"dass_d1\", \"dass_d2\", \"dass_d3\", \"dass_d4\", \"dass_d5\", \"dass_d6\", \"dass_d7\")], na.rm = TRUE)\n# Aniety\ndata$dass_anx &lt;- rowSums(data[, c(\"dass_a1\", \"dass_a2\", \"dass_a3\", \"dass_a4\", \"dass_a5\", \"dass_a6\", \"dass_a7\")], na.rm = TRUE)\n# Stress\ndata$dass_str &lt;- rowSums(data[, c(\"dass_s1\", \"dass_s2\", \"dass_s3\", \"dass_s4\", \"dass_s5\", \"dass_s6\", \"dass_s7\")], na.rm = TRUE)\n\n# PWB\n# Growth\ndata$pwb_gro &lt;- rowSums(data[, 106:114])\n# Purpose in LIfe\ndata$pwb_pur &lt;- rowSums(data[, 115:123])\n# Acceptance\ndata$pwb_acc &lt;- rowSums(data[, 124:132])\n\n# DUREL\ndata$durel &lt;- rowSums(data[, 163:172])\n# Relational\ndata$relational &lt;- rowSums(data[, 173:181])\n\n\n\n\nShow the code\n# Create variable ssa and osa based on reported gender and sexual orientation\ndata$ssa &lt;- ifelse(data$gender == 1, data$eros_andro, data$eros_gyno)\ndata$osa &lt;- ifelse(data$gender == 1, data$eros_gyno, data$eros_andro)"
  },
  {
    "objectID": "MOM_manuscript.html#median-imputation-of-missing-responses",
    "href": "MOM_manuscript.html#median-imputation-of-missing-responses",
    "title": "Mom Manuscript",
    "section": "Median Imputation of Missing Responses",
    "text": "Median Imputation of Missing Responses\n\n\nShow the code\n# Median Imputation\n# # Create subset data set again\n# ssa_data &lt;- subset(data, (sexori == 2 | sexori == 3 | sexori == 4) & (gender == 1 | gender == 2))\n# osa_data &lt;- subset(data, (sexori == 1) & (gender == 1 | gender == 2))\n# \n# # Create separate data based on sexual orientation\n# \n# ssa_data &lt;- ssa_data %&gt;%\n#   mutate(across(where(is.numeric), ~replace_na(., median(., na.rm=TRUE))))\n# \n# osa_data &lt;- osa_data %&gt;%\n#   mutate(across(where(is.numeric), ~replace_na(., median(., na.rm=TRUE))))\n# \n# # First, remove the rows in main_data that are also in subset_data\n# data &lt;- anti_join(data, ssa_data, by = \"RespondentID\")\n# \n# # Then, bind the rows from subset_data to the updated main_data\n# data &lt;- bind_rows(data, ssa_data)\n# \n# # First, remove the rows in main_data that are also in subset_data\n# data &lt;- anti_join(data, osa_data, by = \"RespondentID\")\n# \n# # Then, bind the rows from subset_data to the updated main_data\n# data &lt;- bind_rows(data, osa_data)\n\n\n\n\nShow the code\n# Create Subset\n# ssa_data &lt;- subset(data, (sexori == 2 | sexori == 3 | sexori == 4) & (gender == 1 | gender == 2))\n# osa_data &lt;- subset(data, (sexori == 1) & (gender == 1 | gender == 2))\n\n\n\n\nShow the code\n# # SSA\n# library(apaTables)\n# selected_vars &lt;- c(\"ssa\", \"osa\", \"dass_dep\", \"dass_anx\", \"dass_str\", \"pwb_gro\", \"pwb_pur\", \"pwb_acc\", \"durel\", \"relational\")\n# ssa.cor.data &lt;- subset(ssa_data, select = selected_vars)\n# \n# apa.cor.table(ssa.cor.data, filename = \"time-clean.ssa.cor.table.doc\")\n\n\n\n\nShow the code\n# For reference\n# missing_proportions_per_column &lt;- apply(ssa_data, 2, function(x) sum(is.na(x)) / length(x))\n# max_missing_proportions &lt;- max(missing_proportions_per_column)\n# variables_with_most_missing &lt;- names(missing_proportions_per_column[missing_proportions_per_column == max_missing_proportions])\n# print(variables_with_most_missing)\n# sorted_missing_proportions &lt;- sort(missing_proportions_per_column, decreasing = TRUE)\n# print(sorted_missing_proportions)\n# which(names(ssa_data) == \"my_variable\")"
  },
  {
    "objectID": "MOM_Religiosity_MS.html",
    "href": "MOM_Religiosity_MS.html",
    "title": "MOM-2018: Highly v. Less Religious LGB",
    "section": "",
    "text": "Show the code\n# Load dataset\norg_data &lt;- read_sav(\"mom_2018.sav\")\ndata &lt;- org_data[org_data$sex_att %in% c(2, 3),]\nlgb_data &lt;- subset(data, religion != 16)\nlgb_data &lt;- copy_labels(lgb_data, data)\n\n# Split to Highly v. Less Religious LGB based on Median Split\nlgb_data$religiousness &lt;- ifelse(lgb_data$DUREL_IRr &gt;= 14, \"Highly Religious\", \"Less Religious\")\nShow the code\n# Demographics\n# summarize the data with our package\nselected_vars &lt;- c(\"gender\", \"race\", \"education\", \"religion\", \"sex_att\", \"religiousness\")\ndem_data &lt;- subset(lgb_data, select = selected_vars)\n\n# Factor to see labels\ndem_data$gender &lt;- haven::as_factor(lgb_data$gender)\ndem_data$race &lt;- haven::as_factor(lgb_data$race)\ndem_data$education &lt;- haven::as_factor(lgb_data$education)\ndem_data$religion &lt;- haven::as_factor(lgb_data$religion)\ndem_data$sex_att &lt;- haven::as_factor(lgb_data$sex_att)\n\n# Create Demographic table\ntable1 &lt;- \n  dem_data %&gt;%\n  tbl_summary(\n    include = c(gender, race, education, religion, sex_att, religiousness),\n    label = list(gender ~ \"Gender\", race ~ \"Race\", education ~ \"Education\", religion ~ \"Religion\", sex_att ~ \"Sexual Orientation\", religiousness ~ \"Religiosity\"),\n  missing = \"no\") %&gt;%\n  modify_header(label = \"\") %&gt;%\n  modify_caption(\"*Demographic Information* (N = {N})\")\ntable1\n\n\n\n\n\n\nDemographic Information (N = 110)\n\n\n\n\n\n\n\nN = 1101\n\n\n\n\nGender\n\n\n\n\n    Male\n87 (79%)\n\n\n    Female\n23 (21%)\n\n\n    Transgender\n0 (0%)\n\n\nRace\n\n\n\n\n    Other (please specify)\n4 (3.6%)\n\n\n    African American/Black\n3 (2.7%)\n\n\n    Asian/Pacific Islander\n6 (5.5%)\n\n\n    Hispanic/Latino\n5 (4.5%)\n\n\n    Multiracial\n2 (1.8%)\n\n\n    Native American/American Indian\n0 (0%)\n\n\n    European American/White\n90 (82%)\n\n\nEducation\n\n\n\n\n    12th grade or less\n0 (0%)\n\n\n    High school graduate or GED\n1 (0.9%)\n\n\n    Some college\n11 (10%)\n\n\n    Associates degree\n3 (2.7%)\n\n\n    Technical school training\n1 (0.9%)\n\n\n    College graduate (BA or BS)\n42 (38%)\n\n\n    Masters degree\n32 (29%)\n\n\n    Doctorate degree\n20 (18%)\n\n\nReligion\n\n\n\n\n    Other (please specify)\n11 (10%)\n\n\n    Roman Catholic\n16 (15%)\n\n\n    Eastern Orthodox Christian (Greek, Slavic, etc.)\n0 (0%)\n\n\n    Anglican/Episcopalian\n7 (6.4%)\n\n\n    Lutheran\n0 (0%)\n\n\n    Methodist\n1 (0.9%)\n\n\n    Presbyterian\n10 (9.1%)\n\n\n    Dutch Reformed\n0 (0%)\n\n\n    Pentecostal\n2 (1.8%)\n\n\n    Baptist\n11 (10%)\n\n\n    Evangelical\n20 (18%)\n\n\n    Non-Denominational Christian\n30 (27%)\n\n\n    Muslim\n1 (0.9%)\n\n\n    Buddhist\n0 (0%)\n\n\n    Hindu\n0 (0%)\n\n\n    Jewish\n1 (0.9%)\n\n\n    Non Religious\n0 (0%)\n\n\nSexual Orientation\n\n\n\n\n    Heterosexual\n0 (0%)\n\n\n    Homosexual\n71 (65%)\n\n\n    Bisexual\n39 (35%)\n\n\n    Asexual\n0 (0%)\n\n\nReligiosity\n\n\n\n\n    Highly Religious\n70 (64%)\n\n\n    Less Religious\n40 (36%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\nShow the code\ntable1 %&gt;%\n  as_flex_table() %&gt;%\n  flextable::save_as_docx(table1, path = \"MOM-2018_dem_table.docx\")\n\ndata$age &lt;- as.numeric(data$age)\npsych::describe(data$age)\n\n\n   vars   n  mean    sd median trimmed   mad min max range skew kurtosis   se\nX1    1 111 40.52 12.43     37   39.82 11.86  20  68    48 0.53    -0.96 1.18\nShow the code\n# DF for just LGB and Heterosexuals\nhigh.lgb.data &lt;- lgb_data[lgb_data$religiousness == \"Highly Religious\", ]\nlow.lgb.data &lt;- lgb_data[lgb_data$religiousness == \"Less Religious\", ]\n\nt.test(high.lgb.data$SSAr, low.lgb.data$SSAr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$SSAr and low.lgb.data$SSAr\nt = -2.7916, df = 80.719, p-value = 0.006546\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -8.545592 -1.432980\nsample estimates:\nmean of x mean of y \n 24.98571  29.97500 \n\n\nShow the code\nt.test(high.lgb.data$OSAr, low.lgb.data$OSAr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$OSAr and low.lgb.data$OSAr\nt = 0.76661, df = 95.794, p-value = 0.4452\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -1.163651  2.627936\nsample estimates:\nmean of x mean of y \n 11.55714  10.82500 \n\n\nShow the code\nt.test(high.lgb.data$OSAr, low.lgb.data$OSAr) # not significant\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$OSAr and low.lgb.data$OSAr\nt = 0.76661, df = 95.794, p-value = 0.4452\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -1.163651  2.627936\nsample estimates:\nmean of x mean of y \n 11.55714  10.82500 \n\n\nShow the code\nt.test(high.lgb.data$DASS_Dr, low.lgb.data$DASS_Dr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$DASS_Dr and low.lgb.data$DASS_Dr\nt = -3.9286, df = 51.916, p-value = 0.0002535\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -6.091732 -1.972554\nsample estimates:\nmean of x mean of y \n 3.142857  7.175000 \n\n\nShow the code\nt.test(high.lgb.data$DASS_Ar, low.lgb.data$DASS_Ar)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$DASS_Ar and low.lgb.data$DASS_Ar\nt = -2.0692, df = 68.341, p-value = 0.04232\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -2.45537199 -0.04462801\nsample estimates:\nmean of x mean of y \n     1.20      2.45 \n\n\nShow the code\nt.test(high.lgb.data$DASS_Sr, low.lgb.data$DASS_Sr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$DASS_Sr and low.lgb.data$DASS_Sr\nt = -2.362, df = 65.846, p-value = 0.02114\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -3.3413331 -0.2800955\nsample estimates:\nmean of x mean of y \n 5.814286  7.625000 \n\n\nShow the code\nt.test(high.lgb.data$ECR_ANXm, low.lgb.data$ECR_ANXm)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$ECR_ANXm and low.lgb.data$ECR_ANXm\nt = -3.158, df = 53.423, p-value = 0.002613\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -8.064101 -1.800185\nsample estimates:\nmean of x mean of y \n 13.44286  18.37500 \n\n\nShow the code\nt.test(high.lgb.data$ECR_AVDm, low.lgb.data$ECR_AVDm)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$ECR_AVDm and low.lgb.data$ECR_AVDm\nt = -2.5203, df = 58.108, p-value = 0.0145\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -4.0818448 -0.4681552\nsample estimates:\nmean of x mean of y \n    6.400     8.675 \n\n\nShow the code\nt.test(high.lgb.data$ATT_Br, low.lgb.data$ATT_Br) # not significant\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$ATT_Br and low.lgb.data$ATT_Br\nt = -2.8953, df = 59.44, p-value = 0.005291\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -4.6804697 -0.8552446\nsample estimates:\nmean of x mean of y \n 14.65714  17.42500 \n\n\nShow the code\nt.test(high.lgb.data$ATT_Cr, low.lgb.data$ATT_Cr) # not significant\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$ATT_Cr and low.lgb.data$ATT_Cr\nt = -1.5019, df = 75.104, p-value = 0.1373\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -2.6005124  0.3647982\nsample estimates:\nmean of x mean of y \n 17.95714  19.07500 \n\n\nShow the code\nt.test(high.lgb.data$SUPPORT_Gr, low.lgb.data$SUPPORT_Gr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$SUPPORT_Gr and low.lgb.data$SUPPORT_Gr\nt = 3.7721, df = 54.771, p-value = 0.0003991\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 1.739100 5.682328\nsample estimates:\nmean of x mean of y \n 17.98571  14.27500 \n\n\nShow the code\nt.test(high.lgb.data$SUPPORT_Sr, low.lgb.data$SUPPORT_Sr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$SUPPORT_Sr and low.lgb.data$SUPPORT_Sr\nt = 1.8993, df = 74.151, p-value = 0.06142\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.08571089  3.57856804\nsample estimates:\nmean of x mean of y \n 14.87143  13.12500 \n\n\nShow the code\nt.test(high.lgb.data$PWB_Ar, low.lgb.data$PWB_Ar)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$PWB_Ar and low.lgb.data$PWB_Ar\nt = 4.106, df = 66.88, p-value = 0.0001118\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n  3.767763 10.896523\nsample estimates:\nmean of x mean of y \n 38.15714  30.82500 \n\n\nShow the code\nt.test(high.lgb.data$PWB_Gr, low.lgb.data$PWB_Gr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$PWB_Gr and low.lgb.data$PWB_Gr\nt = 2.3096, df = 60.986, p-value = 0.02431\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 0.4285034 5.9572109\nsample estimates:\nmean of x mean of y \n 44.14286  40.95000 \n\n\nShow the code\nt.test(high.lgb.data$PWB_Pr, low.lgb.data$PWB_Pr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$PWB_Pr and low.lgb.data$PWB_Pr\nt = 2.6209, df = 57.519, p-value = 0.0112\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 1.118155 8.353274\nsample estimates:\nmean of x mean of y \n 41.58571  36.85000 \n\n\nShow the code\nt.test(high.lgb.data$DUREL_IRr, low.lgb.data$DUREL_IRr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$DUREL_IRr and low.lgb.data$DUREL_IRr\nt = 10.514, df = 41.581, p-value = 2.782e-13\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 2.721221 4.014493\nsample estimates:\nmean of x mean of y \n 14.34286  10.97500 \n\n\nShow the code\nt.test(high.lgb.data$DUREL_NORAr, low.lgb.data$DUREL_NORAr)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$DUREL_NORAr and low.lgb.data$DUREL_NORAr\nt = 3.8272, df = 54.374, p-value = 0.0003368\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 1.108942 3.548200\nsample estimates:\nmean of x mean of y \n 12.32857  10.00000 \n\n\nShow the code\nt.test(high.lgb.data$durel_ora1, low.lgb.data$durel_ora1)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$durel_ora1 and low.lgb.data$durel_ora1\nt = 1.9505, df = 53.138, p-value = 0.05639\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.01068994  0.76783280\nsample estimates:\nmean of x mean of y \n 5.328571  4.950000 \n\n\nShow the code\nt.test(high.lgb.data$pwi_4, low.lgb.data$pwi_4)\n\n\n\n    Welch Two Sample t-test\n\ndata:  high.lgb.data$pwi_4 and low.lgb.data$pwi_4\nt = 4.4237, df = 52.958, p-value = 4.863e-05\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 1.179052 3.135234\nsample estimates:\nmean of x mean of y \n 7.257143  5.100000 \n\n\nShow the code\nggplot(data, aes(ECR_AVDm)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nShow the code\nwilcox.test(high.lgb.data$DASS_Dr, low.lgb.data$DASS_Dr)\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  high.lgb.data$DASS_Dr and low.lgb.data$DASS_Dr\nW = 792.5, p-value = 0.0001293\nalternative hypothesis: true location shift is not equal to 0\n\n\nShow the code\npsych::describe(high.lgb.data$OSAr)\n\n\n   vars  n  mean   sd median trimmed  mad min max range skew kurtosis   se\nX1    1 70 11.56 5.46     10   10.48 2.97   7  36    29 2.17     5.42 0.65\n\n\nShow the code\npsych::describe(low.lgb.data$OSAr)\n\n\n   vars  n  mean   sd median trimmed  mad min max range skew kurtosis  se\nX1    1 40 10.82 4.41      9   10.06 2.97   7  30    23  2.3     6.75 0.7"
  },
  {
    "objectID": "MOM_Religiosity_MS.html#multiple-regression",
    "href": "MOM_Religiosity_MS.html#multiple-regression",
    "title": "MOM-2018: Highly v. Less Religious LGB",
    "section": "1 Multiple Regression",
    "text": "1 Multiple Regression\n\n1.1 Test for Multicollinearity"
  }
]